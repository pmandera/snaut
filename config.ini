[semantic_space]

; directory to search for semantic spaces
semspaces_dir = ./data/

; whether to load a semantic space after launch
; should be set to 'yes' if running as server
preload_space = no

; path to the space that will be preloaded if 'preload_space' is set to 'yes'
;
preload_space_file = ./data/english-lemmas-cbow-window.6-dimensions.300-ukwac_subtitle_en.w2v.gz

; 'ssmarket' or 'csv'
preload_space_format = csv

; prenormalizetion
; yes - normalize all vectors to have vectors of length 1
;	(speeds up computation of cosine distances but does not allow
;	to compute other metrics)
; no - do not normalize
prenormalize = no

; which numpy dtype to use
numpy_dtype = float32

; the maximum size of the similarity matrix that can be computed
;
; if -1 no limit otherwise let users generate matrices of the size
; m * n = matrix_size_limit
;
matrix_size_limit = -1

; allow changing the loaded space
; yes - do not allow users to change space
; no - let users change space
; must be set to no if running as a web server
allow_space_change = yes

[server]

; url path prefix
; for example, to put snaut on http://localhost:port/snaut
; root_prefix = /snaut

root_prefix = 

; directory to serve documention from
; should contain a help.md file that is rendered as documentation
;
; documentation that is more appropriate for server use can be found in:
; doc_dir = ./doc/server/
;
doc_dir = ./doc/local/

; directory to serve static resources from
static_dir = ./snaut/static/

; directory containing templates
template_dir = ./snaut/templates/

; name of the logger
; set to gunicorn.error to log to the gunicorn error log
log_name = snaut.logger

; logging level
; possible levels: debug, info, warning, error, critical
log_level = warning

; path to the log file
; do not log to file if empty
log_file = ./snaut.log

[server_local]

; the remaining options are used only when running snaut as a local application
; (not via gunicorn)

; host and port to use when running as a local instance
host = 0.0.0.0
port = 15100

; run in the debug mode
debug = no

; start the browser after launch
start_browser = yes
